{
    "contents" : "#-----------------------------------------#\n# R code for estimating nROUSE parameters #\n#-----------------------------------------#\n\n#' The log-likelihood function for the nROUSE model\n#'\n#' Calculates the sum of the log-likelihoods for the nROUSE \n#' model given a set of data. This function can be used in \n#' an optimization routine, like \\code{optim} to obtain \n#' estimates of the nROUSE model parameters.\n#'\n#' @param par a vector of log-transformed estimates for \n#'   the subset of nROUSE parameters.\n#' @param dat a matrix (or data frame) with a set of named \n#'   columns:\n#' \\describe{\n#'   \\item{TarDur}{The duration of the target flash in ms.}\n#'   \\item{MaskDur}{The duration of the mask in ms.}\n#'   \\item{PrimeDur}{The duration of the prime in ms.}\n#'   \\item{Type}{The input for the prime. Negative values \n#'     denote foil primes, positive values indicate \n#'     target primes.}\n#'   \\item{Y}{The number of correct responses per condition.}\n#'   \\item{N}{The total number of items per condition.}\n#' }\n#' @param mapping an index for which parameters of the nROUSE \n#'   model to estimate.\n#' \\enumerate{\n#'   \\item The feedback scalar.\n#'   \\item The noise multiplier.\n#'   \\item The constant leak current.\n#'   \\item The synaptic depletion rate.\n#'   \\item The replenishment rate.\n#'   \\item The inhibition constant.\n#'   \\item The noise multiplier.\n#'   \\item The temporal attention parameter.\n#'   \\item The visual integration rate.\n#'   \\item The orthographic integration rate.\n#'   \\item The semantic integration rate.\n#' }\n#' @param estimate a logical value. If false, returns \n#'   the predicted proportion correct per condition \n#'   instead of the sum of the log-likelihoods.\n#' @return Either the sum of the log-likelihoods, or if \n#' \\code{estimate} is false, the vector of predicted \n#' proportions for correct responses.\n#' @examples\n#' # Load in example data set\n#' data('priming_ex')\n#' # Select a single subject\n#' d = priming_ex[ priming_ex$Subject == 1, ]\n#' # Specify a set of log-transformed starting values\n#' sv = log( c( N = .0302, I = .9844, Ta = 1 ) )\n#' # Estimate the parameters using maximum likelihood\n#' mle = optim( sv, nROUSE_logLik, dat = d, \n#'   control = list( fnscale = -1, maxit = 10000 ) )\n#' # Print the parameter estimates\n#' round( exp( mle$par ), 3 )\n#' # Compare to default values:\n#' # N  = 0.030\n#' # I  = 0.9844\n#' # Ta = 1.0\n#' @export\n\nnROUSE_logLik = function( par, dat, mapping = c(2,6,8), \n                          estimate = T ) {\n  \n  # Restrict parameters to be positive\n  par = exp( par );\n  \n  # Define default parameters\n  param = c(\n    Fe = 0.25, \n    N = 0.0302, \n    L = 0.15, \n    D = 0.324, \n    R = 0.022, \n    I = 0.9844, \n    Th = 0.15, \n    Ta = 1, \n    SV = 0.0294, \n    SO = 0.0609, \n    SS = 0.015\n  )\n  \n  # Define function to simulate nROUSE model for given set of conditions\n  f = function(x) {\n    presentations = c(x['PrimeDur'],x['TarDur'],x['MaskDur'],500);\n    primeType = c(0,0);\n    if (x['Type'] < 0) primeType[2] = abs( x['Type'] );\n    if (x['Type'] > 0) primeType[1] = x['Type'];\n    param[ mapping ] = par;\n    out = simulate_nROUSE(presentations,primeType,param);\n    return( out$Latencies[3] )\n  }\n  \n  theta = apply( dat, 1, f )\n  \n  if (estimate) {\n    logLik = sum( dbinom( dat[,'Y'], dat[,'N'], theta, log = T ) )\n    if (is.na(logLik)) logLik = -Inf\n    \n    return( logLik )\n  } else return( theta )\n  \n}\n",
    "created" : 1478570480182.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "845978108",
    "id" : "79F4ECC",
    "lastKnownWriteTime" : 1478577128,
    "path" : "F:/Stuff/Kevin's Stuff/Postdoc/R packages/nROUSE/R/Estimation_code.R",
    "project_path" : "R/Estimation_code.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}